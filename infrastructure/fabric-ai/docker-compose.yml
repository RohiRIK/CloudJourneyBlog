
services:
  fabric-ai:
    build: ./backend
    image: fabric-ai:latest
    command: ["./fabric", "--serve", "--address=0.0.0.0:8999"]
    ports:
      - "8999:8999"   # Fabric API port
      - "5173:5173"   # Web UI port (if used)
    volumes:
      - fabric_data:/root/.config/fabric
    env_file:
      - .env
    networks:
      - fabric_network
      - traefik_public
    restart: unless-stopped
    labels: 
      # Traefik labels
        - "traefik.enable=true"
        - "traefik.http.routers.fabric-ai.rule=Host(\"${FABRIC_AI_SUBDOMAIN}.${TRAEFIK_DOMAIN}\")"
        - "traefik.http.routers.fabric-ai.entrypoints=websecure"
        - "traefik.http.routers.fabric-ai.tls=true"
        - "traefik.http.routers.fabric-ai.tls.certresolver=myresolver"
        - "traefik.docker.network=traefik_public"
        - "traefik.http.services.fabric-ai.loadbalancer.server.port=8999"
        - "traefik.http.routers.fabric-ai.middlewares=secure-headers@file,ip-allowlist@file,rate-limit@file"
        - "traefik.http.routers.fabric-ai-http.rule=Host(\"${FABRIC_AI_SUBDOMAIN}.${TRAEFIK_DOMAIN}\")"
        - "traefik.http.routers.fabric-ai-http.entrypoints=web"
        - "traefik.http.routers.fabric-ai-http.middlewares=https-redirect@file"
        - "com.centurylinklabs.watchtower.enable=true"

volumes:
  fabric_data:

networks:
  default:
    driver: bridge
  fabric_network:
    driver: bridge
  traefik_public:
    external: true
    # If you need to create the network, uncomment the following lines:
    # You can specify additional network options if needed, such as:
    # driver_opts:
    #   com.docker.network.bridge.name: "fabric_bridge" 
  