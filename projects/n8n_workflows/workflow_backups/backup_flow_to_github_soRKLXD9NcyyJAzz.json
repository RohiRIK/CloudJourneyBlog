{
  "name": "backup_flow_to_github",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 3
            }
          ]
        }
      },
      "id": "f4bf8ceb-17c1-4cd2-9800-b90d1fc82a73",
      "name": "Every 15 minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        360,
        945
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "filters": {
          "tags": "workflow_backup"
        },
        "requestOptions": {}
      },
      "id": "ff6fb537-583f-483d-be42-eec17480565f",
      "name": "Get all workflows with tag",
      "type": "n8n-nodes-base.n8n",
      "position": [
        580,
        945
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "lN8WqXdTmoLt6Eap",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1744510d-7ed7-46d8-acd3-f975ab73f298",
              "name": "active",
              "type": "boolean",
              "value": "={{ $json.active }}"
            },
            {
              "id": "7e76f5dc-0c32-4b26-a289-975155b80112",
              "name": "url",
              "type": "string",
              "value": "=https://n8n.rohi.life/workflow/{{ $json.id }}"
            },
            {
              "id": "a7b069bf-8090-4dca-a432-f4fd7aa84e6f",
              "name": "errorWorkflow",
              "type": "boolean",
              "value": "={{ !!$json.settings?.errorWorkflow }}"
            },
            {
              "id": "0bff7a9b-0860-4552-b0f6-5fc279fc75d6",
              "name": "name",
              "type": "string",
              "value": "={{ $json.name }}"
            },
            {
              "id": "3065ee2f-d1bb-42b7-b341-7bb38b0f6720",
              "name": "updatedAt",
              "type": "string",
              "value": "={{ $json.updatedAt }}"
            },
            {
              "id": "ea9d39e4-50ca-4c79-b6ab-8b22cafd0257",
              "name": "createdAt",
              "type": "string",
              "value": "={{ $json.createdAt }}"
            },
            {
              "id": "265d66cd-1796-40eb-ae5b-dca8d1a91871",
              "name": "envId",
              "type": "string",
              "value": "=internal-{{ $json.id }}"
            },
            {
              "id": "cfa0fb0f-40ca-48f9-abed-c56e50feb190",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f376e179-d892-4cf5-bff2-f959e80b91ef",
      "name": "work flow settings",
      "type": "n8n-nodes-base.set",
      "position": [
        1020,
        870
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "40dc76e0-cbc6-41d0-a89f-3267940ec117",
              "name": "name",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "f82c247b-1cab-42eb-9f69-a6b89d6ea607",
              "name": "nodes",
              "value": "={{ $('Loop Over Items').item.json.nodes }}",
              "type": "array"
            },
            {
              "id": "2d224a5c-07f6-47b1-a501-893c5714bf87",
              "name": "connections",
              "value": "={{ $('Loop Over Items').item.json.connections }}",
              "type": "object"
            },
            {
              "id": "2b22b556-936c-48ab-a643-8e523871f8f1",
              "name": "active",
              "value": "={{ $json.active }}",
              "type": "boolean"
            },
            {
              "id": "70e461a1-ceb7-4cb2-8ca1-9fb2e771967f",
              "name": "settings",
              "value": "={{ $('Loop Over Items').item.json.settings }}",
              "type": "object"
            },
            {
              "id": "4481392b-2d89-4da5-be00-681a34245b2e",
              "name": "createdAt",
              "value": "={{ $json.createdAt }}",
              "type": "string"
            },
            {
              "id": "b1e7809b-605c-48eb-9ead-57e29d5b06a9",
              "name": "updatedAt",
              "value": "={{ $json.updatedAt }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1240,
        870
      ],
      "id": "fdc3924e-4ee4-4aee-bd20-5e1d22596091",
      "name": "workflow_json"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        800,
        945
      ],
      "id": "1b19cbf6-a846-4ae7-8be9-8ed076a7173c",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "RohiRIK",
          "mode": "list",
          "cachedResultName": "RohiRIK",
          "cachedResultUrl": "https://github.com/RohiRIK"
        },
        "repository": {
          "__rl": true,
          "value": "CloudJourneyBlog",
          "mode": "list",
          "cachedResultName": "CloudJourneyBlog",
          "cachedResultUrl": "https://github.com/RohiRIK/CloudJourneyBlog"
        },
        "filePath": "=projects/n8n_workflows/workflow_backups/{{$('work flow settings').item.json.name}}_{{ $('work flow settings').item.json.id }}.json",
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1460,
        870
      ],
      "id": "c1e9e0fa-696d-4464-9498-b7d6ab0babca",
      "name": "che_exsits_in_github",
      "webhookId": "76106c41-01a3-431c-9bcf-9620f8bc2a6b",
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "qSEsRGukJ4kS0Wum",
          "name": "GitHub account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "RohiRIK",
          "mode": "list",
          "cachedResultName": "RohiRIK",
          "cachedResultUrl": "https://github.com/RohiRIK"
        },
        "repository": {
          "__rl": true,
          "value": "CloudJourneyBlog",
          "mode": "list",
          "cachedResultName": "CloudJourneyBlog",
          "cachedResultUrl": "https://github.com/RohiRIK/CloudJourneyBlog"
        },
        "filePath": "=projects/n8n_workflows/workflow_backups/{{$('work flow settings').item.json.name}}_{{ $('work flow settings').item.json.id }}.json",
        "fileContent": "={{ JSON.stringify($('workflow_json').item.json, null, 2) }}",
        "commitMessage": "=chore: backup n8n automation flow to GitHub {{$('work flow settings').item.json.name}}_{{ $('work flow settings').item.json.id }} to GitHub."
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1680,
        1045
      ],
      "id": "41abe8f3-ffcc-4f20-852d-4a446d7fe1f3",
      "name": "Crate_Json",
      "webhookId": "97d0129f-6c17-4e22-88bc-508b7a1a4085",
      "credentials": {
        "githubApi": {
          "id": "qSEsRGukJ4kS0Wum",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// --- Helper Function (No changes needed here) ---\n\n/**\n * Recursively compares two objects and returns an object detailing the differences.\n * @param {object} oldObject - The original object.\n * @param {object} newObject - The new object to compare against.\n * @returns {object} - An object listing the differences.\n */\nfunction compareObjects(oldObject, newObject) {\n  const diff = {};\n  // Ensure oldObject and newObject are valid objects before getting keys\n  const oldKeys = (oldObject && typeof oldObject === 'object') ? Object.keys(oldObject) : [];\n  const newKeys = (newObject && typeof newObject === 'object') ? Object.keys(newObject) : [];\n  const allKeys = new Set([...oldKeys, ...newKeys]);\n\n  for (const key of allKeys) {\n    const oldValue = oldObject ? oldObject[key] : undefined;\n    const newValue = newObject ? newObject[key] : undefined;\n\n    if (newObject && !newObject.hasOwnProperty(key)) {\n      diff[key] = { status: 'REMOVED', oldValue: oldValue };\n    } else if (oldObject && !oldObject.hasOwnProperty(key)) {\n      diff[key] = { status: 'ADDED', newValue: newValue };\n    } else if (typeof oldValue === 'object' && oldValue !== null && typeof newValue === 'object' && newValue !== null && !Array.isArray(oldValue) && !Array.isArray(newValue)) {\n      const nestedDiff = compareObjects(oldValue, newValue);\n      if (Object.keys(nestedDiff).length > 0) {\n        diff[key] = nestedDiff;\n      }\n    } else if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n      diff[key] = { status: 'MODIFIED', oldValue: oldValue, newValue: newValue };\n    }\n  }\n  return diff;\n}\n\n\n// --- Main Execution ---\n\n// Get the old JSON (the backup) and the new JSON from the previous node's output.\nconst old_json_to_compare = $input.item.json.backuped_json;\nconst new_json_to_compare = $input.item.json.updated_json;\n\n// Find the differences between the two versions.\nconst differences = compareObjects(old_json_to_compare, new_json_to_compare);\n\n// Check if the 'differences' object has any keys. If it does, changes were found.\nif (Object.keys(differences).length > 0) {\n  // YES, the backup needs to be updated.\n  return {\n    update_needed: true,\n    reason: \"Comparison found changes. The 'backuped_json' needs to be updated with 'updated_json'.\",\n    changes: differences // The actual changes are included for logging or review.\n  };\n} else {\n  // NO, the backup is already current.\n  return {\n    update_needed: false,\n    reason: \"No changes found between 'backuped_json' and 'updated_json'. The backup is current.\"\n  };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1900,
        820
      ],
      "id": "86f6fe18-e7fb-43bd-8a6e-933beedeec0f",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "56d51dc6-fbf8-4efa-aeaf-566e36c48df3",
              "name": "backuped_json",
              "value": "={{$('che_exsits_in_github').item.json}}",
              "type": "object"
            },
            {
              "id": "c87b2b40-cb0e-41a5-a2ac-cb9bfcca7dc2",
              "name": "updated_json",
              "value": "={{$('workflow_json').item.json}}",
              "type": "object"
            },
            {
              "id": "fd8ca2ca-2776-4696-8882-c59abb53028d",
              "name": "",
              "value": "{{ JSON.stringify($json.data).item.json, null, 2) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        820
      ],
      "id": "536abf51-e901-4bae-be65-48afa9db6bd6",
      "name": "jsons_to_compress"
    }
  ],
  "connections": {
    "Every 15 minutes": {
      "main": [
        [
          {
            "node": "Get all workflows with tag",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all workflows with tag": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "work flow settings": {
      "main": [
        [
          {
            "node": "workflow_json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "workflow_json": {
      "main": [
        [
          {
            "node": "che_exsits_in_github",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "work flow settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "che_exsits_in_github": {
      "main": [
        [
          {
            "node": "jsons_to_compress",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crate_Json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crate_Json": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "jsons_to_compress": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "createdAt": "2025-06-15T13:36:45.752Z",
  "updatedAt": "2025-06-18T10:02:35.866Z"
}