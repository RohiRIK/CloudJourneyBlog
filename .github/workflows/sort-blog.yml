# .github/workflows/sort-blog.yml

name: Sort New Blog Post

# This action is triggered by a repository_dispatch event.
on:
  repository_dispatch:
    types: [new-blog-post]

jobs:
  create-and-commit:
    runs-on: ubuntu-latest

    # Permissions needed to check out code and push changes.
    permissions:
        contents: write
        issues: write
        pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sorting Blog Post File
        env:
          POST_TOPIC: ${{ github.event.client_payload.topic }}
          POST_NAME: ${{ github.event.client_payload.name }}
        run: |
          set -e # Exit immediately if a command exits with a non-zero status.

          log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"; }
          log "[INFO] Starting blog post sorting automation..."

          # --- Basic Validation ---
          if [[ -z "$POST_TOPIC" || -z "$POST_NAME" ]]; then
            log "[ERROR] 'topic' and 'name' must be provided."
            exit 1
          fi

          # --- Security Sanitization ---
          SAFE_TOPIC=$(echo "$POST_TOPIC" | tr -cd '[:alnum:]_-')
          SAFE_NAME=$(echo "$POST_NAME" | tr -cd '[:alnum:]_.-')

          if [[ "$SAFE_TOPIC" != "$POST_TOPIC" || "$SAFE_NAME" != "$POST_NAME" ]]; then
            log "[ERROR] Invalid characters detected. Use only letters, numbers, hyphens, and underscores."
            exit 1
          fi
          if [[ "$SAFE_NAME" != *.md ]]; then
            log "[ERROR] File name must end with .md"
            exit 1
          fi

          # --- Define Paths ---
          SOURCE_FILE="content/blogs/$SAFE_NAME"
          TARGET_DIR="content/blogs/$SAFE_TOPIC"
          TARGET_FILE="$TARGET_DIR/$SAFE_NAME"

          log "[INFO] Source: $SOURCE_FILE"
          log "[INFO] Target: $TARGET_FILE"

          # --- Check if source file exists ---
          if [ ! -f "$SOURCE_FILE" ]; then
            log "[ERROR] Source file '$SOURCE_FILE' not found. Aborting."
            exit 1
          fi

          # --- Create target directory and move file with git ---
          mkdir -p "$TARGET_DIR"
          log "[INFO] Moving file with 'git mv'..."
          git mv "$SOURCE_FILE" "$TARGET_FILE"
          log "[SUCCESS] File moved."

          # --- Prepend front matter WITHOUT deleting content ---
          log "[INFO] Adding front matter..."
          POST_CONTENT=$(cat "$TARGET_FILE")
          
          # Write front matter properly with actual newlines
          echo "---" > "$TARGET_FILE"
          echo "title: '$SAFE_NAME'" >> "$TARGET_FILE"
          echo "topic: '$SAFE_TOPIC'" >> "$TARGET_FILE"
          echo "date: $(date +'%Y-%m-%d')" >> "$TARGET_FILE"
          echo "---" >> "$TARGET_FILE"
          echo "" >> "$TARGET_FILE" # Adds a blank line for readability
          echo "$POST_CONTENT" >> "$TARGET_FILE"
          log "[SUCCESS] Front matter added. Automation complete."

      - name: Commit and Push Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat: move blog post '${{ github.event.client_payload.name }}' to topic '${{ github.event.client_payload.topic }}'"
          branch: main
          # No file_pattern needed, the action commits all changes by default